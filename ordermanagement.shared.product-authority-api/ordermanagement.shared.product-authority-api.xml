<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ordermanagement.shared.product-authority-api</name>
    </assembly>
    <members>
        <member name="M:ordermanagement.shared.product_authority_api.Controllers.OfferingsController.GetOfferingsBasedOnProductKeyAsync(System.String,System.Nullable{System.DateTime})">
            <summary>
            Get all active product offerings for the supplied product key and order start date.
            </summary>
        </member>
        <member name="M:ordermanagement.shared.product_authority_api.Controllers.OfferingsController.GetOfferingsBasedOnOfferingKeyAsync(System.String,System.Nullable{System.DateTime})">
            <summary>
            Get all active offerings for the supplied offering key and order start date.
            </summary>
        </member>
        <member name="M:ordermanagement.shared.product_authority_api.Controllers.OfferingsController.GetAllOfferingStatusesAsync">
            <summary>
            Get all available offering statuses
            </summary>
        </member>
        <member name="M:ordermanagement.shared.product_authority_api.Controllers.OfferingsController.GetAllOfferingFormatsAsync">
            <summary>
            Get all available offering formats
            </summary>
        </member>
        <member name="M:ordermanagement.shared.product_authority_api.Controllers.OfferingsController.GetAllOfferingPlatformsAsync">
            <summary>
            Get all available offering platforms
            </summary>
        </member>
        <member name="M:ordermanagement.shared.product_authority_api.Controllers.OfferingsController.AddOfferingAsync(System.String,ordermanagement.shared.product_authority_api.Application.Commands.Offerings.AddOfferingDto)">
            <summary>
            Create a new offering for the product specified by the product key
            </summary>
        </member>
        <member name="M:ordermanagement.shared.product_authority_api.Controllers.OfferingsController.UpdateOfferingAsync(System.String,System.String,ordermanagement.shared.product_authority_api.Application.Commands.Offerings.UpdateOfferingDto)">
            <summary>
            Update an existing offering
            </summary>
        </member>
        <member name="M:ordermanagement.shared.product_authority_api.Controllers.ProductsController.GetProductBasedOnEffectiveStartDateAsync(System.String,System.Nullable{System.DateTime})">
            <summary>
            Get product details for the supplied product key and effective start date.
            </summary>
        </member>
        <member name="M:ordermanagement.shared.product_authority_api.Controllers.ProductsController.GetAllProductStatusesAsync">
            <summary>
            Get all available product statuses
            </summary>
        </member>
        <member name="M:ordermanagement.shared.product_authority_api.Controllers.ProductsController.GetAllProductTypesAsync">
            <summary>
            Get all available product types
            </summary>
        </member>
        <member name="M:ordermanagement.shared.product_authority_api.Controllers.ProductsController.AddProductAsync(ordermanagement.shared.product_authority_api.Application.Commands.Products.AddProductDto)">
            <summary>
            Add a new Product
            </summary>
        </member>
        <member name="M:ordermanagement.shared.product_authority_api.Controllers.ProductsController.UpdateProductAsync(ordermanagement.shared.product_authority_api.Application.Commands.Products.UpdateProductDto)">
            <summary>
            Update an existing product
            </summary>
        </member>
        <member name="M:ordermanagement.shared.product_authority_api.Controllers.RatesController.GetRateBasedOnRateKeyAsync(System.String,System.Nullable{System.DateTime})">
            <summary>
            Get all active rate details for the supplied rate key and order start date.
            </summary>
        </member>
        <member name="M:ordermanagement.shared.product_authority_api.Controllers.RatesController.GetRateBasedOnOfferingKeyAsync(System.String,System.Nullable{System.DateTime})">
            <summary>
            Get all active offering rates for the supplied offering key and order start date.
            </summary>
        </member>
        <member name="M:ordermanagement.shared.product_authority_api.Controllers.RatesController.GetRateBasedOnProductKeyAsync(System.String,System.Nullable{System.DateTime})">
            <summary>
            Get all active product rates for the supplied product key and order start date.
            </summary>
        </member>
        <member name="M:ordermanagement.shared.product_authority_api.Controllers.RatesController.GetAllDeliveryMethodsAsync">
            <summary>
            Get all available delivery methods
            </summary>
        </member>
        <member name="M:ordermanagement.shared.product_authority_api.Controllers.RatesController.GetAllRateTypesAsync">
            <summary>
            Get all available rate types
            </summary>
        </member>
        <member name="M:ordermanagement.shared.product_authority_api.Controllers.RatesController.AddRateAsync(System.String,System.String,ordermanagement.shared.product_authority_api.Application.Commands.Rates.AddRateDto)">
            <summary>
            Add a rate to the product offering
            </summary>
        </member>
        <member name="M:ordermanagement.shared.product_authority_api.Controllers.RatesController.UpdateRateAsync(System.String,System.String,System.String,ordermanagement.shared.product_authority_api.Application.Commands.Rates.UpdateRateDto)">
            <summary>
            Update an existing Rate
            </summary>
        </member>
        <member name="M:ordermanagement.shared.product_authority_api.SwaggerDefaultValues.Apply(Swashbuckle.AspNetCore.Swagger.Operation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Applies the filter to the specified operation using the given context.
            </summary>
            <param name="operation">The operation to apply the filter to.</param>
            <param name="context">The current operation filter context.</param>
        </member>
        <member name="M:ordermanagement.shared.product_authority_api.SwaggerEnumNamesFilter.Apply(Swashbuckle.AspNetCore.Swagger.Schema,Swashbuckle.AspNetCore.SwaggerGen.SchemaFilterContext)">
            <summary>
            Applies a schema filter which exports enumeration names, instead of only the values, via the x-enumNames extension. This can
            be read by NSwag client utilities.
            </summary>
            <param name="schema">The schema to apply the filter to.</param>
            <param name="context">The current schema filter context.</param>
        </member>
    </members>
</doc>
